{"name":"gulp-ng-template-html","tagline":"build angular template in html and use js to compile it","body":"gulp-ng-template-html\r\n====\r\nPrecompile AngularJS templates to a JS file(angular load function compile it, so that can add it into $templateCache.) and html file(all is dom element)\r\n\r\nthis repo is branch of gulp-ng-template(some codes are come from gulp-ng-template), if you want to use gulp ng-template, please move to [gulp-ng-template](https://github.com/teambition/gulp-ng-template).\r\n\r\nThanks [Teambition](http://teambition.com) for contribute gulp-ng-template!\r\n\r\n## Difference\r\n\r\n###gulp-ng-template-html\r\ncompile your html file into 2 file, one is js,one is html. js will provide a loadedTemplateUrl function for load your template,\r\nafter load done will automate compile it into $templateCache.\r\n\r\n###gulp-ng-template\r\nPrecompile AngularJS templates to a JS file with $templateCache. It put all the html into js.\r\n\r\n## Install\r\n\r\nInstall with [npm](https://npmjs.org/package/gulp-ng-template-html)\r\n\r\n```\r\nnpm install --save-dev gulp-ng-template-html\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar minifyHtml = require('gulp-minify-html');\r\nvar ngTemplate = require('gulp-ng-template-html');\r\n\r\ngulp.task('templates:dist', function() {\r\n  gulp.src('src/tpl/**/*.html')\r\n    .pipe(minifyHtml({empty: true, quotes: true}))\r\n    .pipe(ngTemplate({\r\n      moduleName: 'myTemplates',\r\n      standalone: true\r\n    }))\r\n    .pipe(uglify())  //you want mini all js? use this\r\n    .pipe(gulp.dest('dist'));  // output file: 'dist/js/templates.js'&'dist/js/templates.html'\r\n});\r\n```\r\n\r\n## Demo\r\n\r\ntest/a.html:\r\n\r\n```html\r\n<div class=\"test\">A</div>\r\n```\r\n\r\ntest/b.html:\r\n\r\n```html\r\n<div class=\"test\">\r\n  <span>B</span>\r\n</div>\r\n```\r\n\r\n`gulp test`:\r\n\r\n```js\r\ngulp.task('test', function () {\r\n  return gulp.src(['test/a.html', 'test/b.html'])\r\n    .pipe(ngTemplate())\r\n    .pipe(gulp.dest('test'));\r\n});\r\n```\r\n\r\ntest/js/templates.js:\r\n\r\n```js\r\n;(function(angular){\r\n  'use strict';\r\n\r\n  var appConfig = angular.module('testModule', []);\r\n\r\n  appConfig.config(['$provide', function ($provide) {\r\n    $provide.decorator('$templateCache', ['$http', '$delegate', '$injector', function ($http, $delegate, $injector) {\r\n      $delegate.loadedTemplateUrl = function (url) {\r\n        $http({\r\n          url: url,\r\n          method: 'GET'\r\n        }).then(function (response) {\r\n          if (response.status === 200) {\r\n            $injector.get('$compile')(response.data);\r\n          }\r\n        });\r\n      };\r\n      return $delegate;\r\n    }]);\r\n  }]);\r\n\r\n  appConfig.run(['$templateCache', '$http', '$compile', function ($templateCache, $http, $compile) {\r\n    //TODO:please replace you URL or Use this loadedTemplateUrl to load a template\r\n    $templateCache.loadedTemplateUrl('your URL address');\r\n    //demo: $templateCache.loadedTemplateUrl('/template/ng-template.html');\r\n  }]);\r\n\r\n})(angular);\r\n```\r\n\r\ntest/js/templates.html:\r\n\r\n```js\r\n\r\n<script type=\"text/ng-template\" id=\"a.html\">\r\n  <div class=\"test\">A</div>\r\n\r\n</script>\r\n\r\n<script type=\"text/ng-template\" id=\"b.html\">\r\n  <div class=\"test\">\r\n  <span>B</span>\r\n</div>\r\n\r\n</script>\r\n\r\n```\r\n\r\n## Options\r\n\r\n### moduleName\r\n\r\n*Optional*, Type: `String`, Default: `'ngTemplates'`.\r\n\r\nName of the AngularJS module.\r\n\r\n### standalone\r\n\r\n*Optional*, Type: `Boolean`, Default: `false`.\r\n\r\nCreate an AngularJS module.\r\n\r\n\r\n## License\r\n\r\nMIT\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}